# This is a basic workflow to help you get started with Actions
name: "release with file Tests"

on:
  push:
    branches: 
       - master

jobs:
  release:
    runs-on: ubuntu-latest

    steps:

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      shell: bash
    
    - name: build file
      run: ls > test.list
      shell: bash
    
    - name: build file
      run: |
        ls

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        body: |
          Changes in this Release
          - $CHANGES
          - $TITLE #$NUMBER @$AUTHOR
          - Second Change
          - title: 'üöÄ Features'
            label: 'enhancement'
          - title: 'üêõ Hotfixes'
            label: 'bug'
          - title: 'ETC'
            label: 'documentation'
        draft: true
        #  prerelease is beta i must publish
        prerelease: false
    
    - name: Get the url
      id: get_url
      run: echo ::set-output name=URL::${{ steps.create_release.outputs.assets_url }}/api/uploads/}
      shell: bash

    - name: print var
      run: |
        echo ${{ steps.outputs.get_url.URL }}
    
    - name: Upload Release
      id: upload-release-asset
      uses: Fhwang0926/upload-release-asset@v1.1.7
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        # upload_url: ${{ steps.get_version.outputs.URL }}
        asset_name: test.list
        asset_content_type: application/octet-stream
